                           *** This is a simple game project with Python ***

#The following simple Python project is to create a basic Snake game using Python and the Pygame library.
 The player controls a snake on the screen and the goal is to eat food (represented by a dot) to make it longer.
 If the snake hits the border of the screen or itself, the game ends.

#Project requirements:

*Install Python
*Pygame library

#The codes of this project are as follows:

  import pygame
  import random

  pygame.init()

  # Screen settings
  screen_width, screen_height = 640, 480
  screen = pygame.display.set_mode((screen_width, screen_height))
  pygame.display.set_caption("Snake Game")

  # Colors
  white = (255, 255, 255)
  red = (255, 0, 0)
  green = (0, 255, 0)

# Snake settings
snake_block = 10
snake_speed = 15

# Snake function
def snake(snake_block, snake_list):
    for x in snake_list:
        pygame.draw.rect(screen, green, [x[0], x[1], snake_block, snake_block])

# Game loop
def game_loop():
    game_over = False
    game_close = False

    snake_list = []
    snake_length = 1

    snake_x, snake_y = screen_width // 2, screen_height // 2
    snake_x_change, snake_y_change = 0, 0

    food_x, food_y = round(random.randrange(0, screen_width - snake_block) / 10.0) * 10.0, round(random.randrange(0, screen_height - snake_block) / 10.0) * 10.0

    clock = pygame.time.Clock()

    while not game_over:

        while game_close:
            screen.fill(white)
            font_style = pygame.font.SysFont(None, 50)
            message = font_style.render("You Lost! Press Q-Quit or C-Play Again", True, red)
            screen.blit(message, (screen_width // 6, screen_height // 3))

            pygame.display.update()

            for event in pygame.event.get():
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_q:
                        game_over = True
                        game_close = False
                    if event.key == pygame.K_c:
                        game_loop()

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                game_over = True
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    snake_x_change = -snake_block
                    snake_y_change = 0
                elif event.key == pygame.K_RIGHT:
                    snake_x_change = snake_block
                    snake_y_change = 0
                elif event.key == pygame.K_UP:
                    snake_y_change = -snake_block
                    snake_x_change = 0
                elif event.key == pygame.K_DOWN:
                    snake_y_change = snake_block
                    snake_x_change = 0

        if snake_x &gt;= screen_width or snake_x = screen_height or snake_y  snake_length:
            del snake_list[0]

        for x in snake_list[:-1]:
            if x == snake_head:
                game_close = True

        snake(snake_block, snake_list)

        pygame.display.update()

        if snake_x == food_x and snake_y == food_y:
            food_x, food_y = round(random.randrange(0, screen_width - snake_block) / 10.0) * 10.0, round(random.randrange(0, screen_height - snake_block) / 10.0) * 10.0
            snake_length += 1

        clock.tick(snake_speed)

    pygame.quit()
    quit()

game_loop()
